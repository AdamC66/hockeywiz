{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/oem/projects/hockey-wiz/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/home/oem/projects/hockey-wiz/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/oem/projects/hockey-wiz/frontend/src/pages/home/Home.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n      query allTeamRecords{\\n        team{\\n          name\\n          city\\n          nhl_api_id\\n        }\\n        wins\\n        losses\\n        ot\\n        gamesPlayed\\n        goalsScored\\n        goalsAgainst\\n        streakLength\\n        streakType\\n        points\\n      }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport DivisionTable from '../../components/DivisionTable/DivisionTable';\nimport main_url from '../../config';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nfunction Home() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        teams = _useState2[0],\n        setTeams = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isLoading = _useState4[0],\n        setIsLoading = _useState4[1];\n\n  useEffect(() => {\n    async function fetchData() {\n      const res = await main_url.get('/teams/api/standings').then(res => setTeams(res.data));\n      setIsLoading(false);\n    }\n\n    fetchData();\n  }, []);\n  const GET_STANDINGS = gql(_templateObject());\n  console.log(data);\n  if (loading) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Loading\");\n  if (error) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Error\");\n  return React.createElement(\"div\", {\n    className: \"Teams\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(DivisionTable, {\n    teams: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/oem/projects/hockey-wiz/frontend/src/pages/home/Home.js"],"names":["React","useEffect","useState","DivisionTable","main_url","useQuery","gql","Home","teams","setTeams","isLoading","setIsLoading","fetchData","res","get","then","data","GET_STANDINGS","console","log","loading","error"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,SAASC,IAAT,GAAgB;AAAA,oBACcL,QAAQ,CAAC,EAAD,CADtB;AAAA;AAAA,QACLM,KADK;AAAA,QACEC,QADF;;AAAA,qBAEsBP,QAAQ,CAAC,IAAD,CAF9B;AAAA;AAAA,QAELQ,SAFK;AAAA,QAEMC,YAFN;;AAKZV,EAAAA,SAAS,CAAC,MAAK;AACb,mBAAeW,SAAf,GAA0B;AACxB,YAAMC,GAAG,GAAG,MAAMT,QAAQ,CAACU,GAAT,CAAa,sBAAb,EACjBC,IADiB,CACZF,GAAG,IAAGJ,QAAQ,CAACI,GAAG,CAACG,IAAL,CADF,CAAlB;AAEAL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AACDC,IAAAA,SAAS;AACV,GAPQ,EAOP,EAPO,CAAT;AASA,QAAMK,aAAa,GAAGX,GAAH,mBAAnB;AAkBAY,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,MAAII,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACX,SAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEL,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF;AAMD;;AAED,eAAeT,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport DivisionTable from '../../components/DivisionTable/DivisionTable'\nimport main_url from '../../config'\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nfunction Home() {\n    const [teams, setTeams] = useState([])\n    const [isLoading, setIsLoading] = useState(true);\n    \n\n    useEffect(() =>{\n      async function fetchData(){\n        const res = await main_url.get('/teams/api/standings')\n        .then(res=> setTeams(res.data))\n        setIsLoading(false)\n      }\n      fetchData()\n    },[])\n    \n    const GET_STANDINGS = gql`\n      query allTeamRecords{\n        team{\n          name\n          city\n          nhl_api_id\n        }\n        wins\n        losses\n        ot\n        gamesPlayed\n        goalsScored\n        goalsAgainst\n        streakLength\n        streakType\n        points\n      }\n    `\n    console.log(data)\n    if (loading) return <div>Loading</div>\n    if (error) return <div>Error</div>\n    return (\n        \n      <div className=\"Teams\">\n        <DivisionTable teams={data}/>\n      </div>\n    );\n  }\n  \n  export default Home;"]},"metadata":{},"sourceType":"module"}
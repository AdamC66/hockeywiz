{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/oem/projects/hockey-wiz/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/oem/projects/hockey-wiz/frontend/src/pages/teams/Teams.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    query allGames($name: String){\\n      allGames(name: $name){\\n        homeTeam{\\n          city\\n          name\\n        }\\n        awayTeam{\\n          city\\n          name\\n        }\\n        date\\n        venue\\n        gamePk\\n        status\\n        finalScoreHome\\n        finalScoreAway\\n      }\\n    }\\n        \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    query team($name: String){\\n        team(name: $name){\\n          name\\n          city\\n          teamRecord{\\n            wins\\n            losses\\n            ot\\n            gamesPlayed\\n            goalsScored\\n            goalsAgainst\\n            streakType\\n            streakLength\\n            points\\n          }\\n        }\\n      }\\n        \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport BigTeamCard from '../../components/BigTeamCard/BigTeamCard';\nimport Calendar from '../../components/Calendar/Calendar';\n\nfunction Teams(props) {\n  const GET_TEAM = gql(_templateObject());\n  const GET_SCHED = gql(_templateObject2());\n\n  const _useQuery = useQuery(GET_TEAM, {\n    variables: {\n      name: props.match.params.name\n    }\n  }),\n        teamData = _useQuery.data,\n        teamLoading = _useQuery.loading,\n        teamError = _useQuery.error;\n\n  if (teamLoading) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Loading\");\n  if (teamError) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Error\");\n\n  const _useQuery2 = useQuery(GET_sched, {\n    variables: {\n      name: props.match.params.name\n    }\n  }),\n        schedData = _useQuery2.data,\n        schedLoading = _useQuery2.loading,\n        schedError = _useQuery2.error;\n\n  if (schedLoading) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Loading\");\n  if (schedError) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Error\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(BigTeamCard, {\n    team: teamData.team,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Calendar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n}\n\nexport default Teams;","map":{"version":3,"sources":["/home/oem/projects/hockey-wiz/frontend/src/pages/teams/Teams.js"],"names":["React","useQuery","gql","BigTeamCard","Calendar","Teams","props","GET_TEAM","GET_SCHED","variables","name","match","params","teamData","data","teamLoading","loading","teamError","error","GET_sched","schedData","schedLoading","schedError","team"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,QAAP,MAAqB,oCAArB;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,QAAMC,QAAQ,GAAGL,GAAH,mBAAd;AAmBA,QAAMM,SAAS,GAAGN,GAAH,oBAAf;;AApBkB,oBAyC8CD,QAAQ,CAACM,QAAD,EAAW;AAACE,IAAAA,SAAS,EAAE;AAACC,MAAAA,IAAI,EAAEJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBF;AAA1B;AAAZ,GAAX,CAzCtD;AAAA,QAyCLG,QAzCK,aAyCVC,IAzCU;AAAA,QAyCaC,WAzCb,aAyCKC,OAzCL;AAAA,QAyCgCC,SAzChC,aAyC0BC,KAzC1B;;AA0ClB,MAAIH,WAAJ,EAAiB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACjB,MAAIE,SAAJ,EAAe,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;;AA3CG,qBA6CiDhB,QAAQ,CAACkB,SAAD,EAAY;AAACV,IAAAA,SAAS,EAAE;AAACC,MAAAA,IAAI,EAAEJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBF;AAA1B;AAAZ,GAAZ,CA7CzD;AAAA,QA6CLU,SA7CK,cA6CVN,IA7CU;AAAA,QA6CcO,YA7Cd,cA6CML,OA7CN;AAAA,QA6CkCM,UA7ClC,cA6C4BJ,KA7C5B;;AA8ClB,MAAIG,YAAJ,EAAkB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AAClB,MAAIC,UAAJ,EAAgB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AAEhB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAET,QAAQ,CAACU,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH;;AAED,eAAelB,KAAf","sourcesContent":["import React from 'react'\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport BigTeamCard from '../../components/BigTeamCard/BigTeamCard'\nimport Calendar from '../../components/Calendar/Calendar'\nfunction Teams(props) {\n    const GET_TEAM = gql`\n    query team($name: String){\n        team(name: $name){\n          name\n          city\n          teamRecord{\n            wins\n            losses\n            ot\n            gamesPlayed\n            goalsScored\n            goalsAgainst\n            streakType\n            streakLength\n            points\n          }\n        }\n      }\n        `\n    const GET_SCHED = gql`\n    query allGames($name: String){\n      allGames(name: $name){\n        homeTeam{\n          city\n          name\n        }\n        awayTeam{\n          city\n          name\n        }\n        date\n        venue\n        gamePk\n        status\n        finalScoreHome\n        finalScoreAway\n      }\n    }\n        `      \n      \n    const { data:teamData, loading:teamLoading, error:teamError } = useQuery(GET_TEAM, {variables: {name: props.match.params.name}});\n    if (teamLoading) return <div>Loading</div>\n    if (teamError) return <div>Error</div>\n    \n    const { data:schedData, loading:schedLoading, error:schedError } = useQuery(GET_sched, {variables: {name: props.match.params.name}});\n    if (schedLoading) return <div>Loading</div>\n    if (schedError) return <div>Error</div>\n\n    return (\n        <div>\n            <BigTeamCard team={teamData.team}></BigTeamCard>\n            <Calendar/>\n        </div>\n    )\n}\n\nexport default Teams\n"]},"metadata":{},"sourceType":"module"}
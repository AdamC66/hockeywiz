{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/oem/projects/hockey-wiz/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/oem/projects/hockey-wiz/frontend/src/pages/teams/Teams.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    query team($name: String){\\n        team(name: $name){\\n          name\\n          city\\n          teamRecord{\\n            wins\\n            losses\\n            ot\\n            gamesPlayed\\n            goalsScored\\n            goalsAgainst\\n            streakType\\n            streakLength\\n            points\\n          }\\n          homeGame{\\n            homeTeam{\\n              city\\n              name\\n            }\\n            awayTeam{\\n              city\\n              name\\n            }\\n            date\\n            venue\\n            gamePk\\n            status\\n            finalScoreHome\\n            finalScoreAway\\n    }\\n        }\\n    }\\n        \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport BigTeamCard from '../../components/BigTeamCard/BigTeamCard';\nimport Calendar from '../../components/Calendar/Calendar';\n\nfunction Teams(props) {\n  const GET_TEAM = gql(_templateObject());\n\n  const _useQuery = useQuery(GET_TEAM, {\n    variables: {\n      name: props.match.params.name\n    }\n  }),\n        teamData = _useQuery.data,\n        teamLoading = _useQuery.loading,\n        teamError = _useQuery.error;\n\n  if (teamLoading) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Loading\");\n  if (teamError) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Error\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(BigTeamCard, {\n    team: teamData.team,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Calendar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }));\n}\n\nexport default Teams;","map":{"version":3,"sources":["/home/oem/projects/hockey-wiz/frontend/src/pages/teams/Teams.js"],"names":["React","useQuery","gql","BigTeamCard","Calendar","Teams","props","GET_TEAM","variables","name","match","params","teamData","data","teamLoading","loading","teamError","error","team"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,QAAP,MAAqB,oCAArB;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,QAAMC,QAAQ,GAAGL,GAAH,mBAAd;;AADkB,oBAoC8CD,QAAQ,CAACM,QAAD,EAAW;AAACC,IAAAA,SAAS,EAAE;AAACC,MAAAA,IAAI,EAAEH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBF;AAA1B;AAAZ,GAAX,CApCtD;AAAA,QAoCLG,QApCK,aAoCVC,IApCU;AAAA,QAoCaC,WApCb,aAoCKC,OApCL;AAAA,QAoCgCC,SApChC,aAoC0BC,KApC1B;;AAqClB,MAAIH,WAAJ,EAAiB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACjB,MAAIE,SAAJ,EAAe,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AAIf,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEJ,QAAQ,CAACM,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH;;AAED,eAAeb,KAAf","sourcesContent":["import React from 'react'\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport BigTeamCard from '../../components/BigTeamCard/BigTeamCard'\nimport Calendar from '../../components/Calendar/Calendar'\nfunction Teams(props) {\n    const GET_TEAM = gql`\n    query team($name: String){\n        team(name: $name){\n          name\n          city\n          teamRecord{\n            wins\n            losses\n            ot\n            gamesPlayed\n            goalsScored\n            goalsAgainst\n            streakType\n            streakLength\n            points\n          }\n          homeGame{\n            homeTeam{\n              city\n              name\n            }\n            awayTeam{\n              city\n              name\n            }\n            date\n            venue\n            gamePk\n            status\n            finalScoreHome\n            finalScoreAway\n    }\n        }\n    }\n        `     \n    const { data:teamData, loading:teamLoading, error:teamError } = useQuery(GET_TEAM, {variables: {name: props.match.params.name}});\n    if (teamLoading) return <div>Loading</div>\n    if (teamError) return <div>Error</div>\n    \n\n\n    return (\n        <div>\n            <BigTeamCard team={teamData.team}></BigTeamCard>\n            <Calendar/>\n        </div>\n    )\n}\n\nexport default Teams\n"]},"metadata":{},"sourceType":"module"}
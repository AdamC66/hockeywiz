{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/oem/projects/hockey-wiz/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/oem/projects/hockey-wiz/frontend/src/pages/teams/Teams.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    query team($name: String){\\n        team(name: $name){\\n          name\\n          city\\n          teamRecord{\\n            wins\\n            losses\\n          }\\n        }\\n      }\\n        \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nfunction Teams(props) {\n  console.log(props);\n  const GET_TEAM = gql(_templateObject());\n\n  const _useQuery = useQuery(GET_TEAM, {\n    variables: props.match.params.name\n  }),\n        data = _useQuery.data,\n        loading = _useQuery.loading,\n        error = _useQuery.error;\n\n  if (loading) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Loading\");\n  if (error) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Error\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"TEAMS PAGE!\", props.match.params.name);\n}\n\nexport default Teams;","map":{"version":3,"sources":["/home/oem/projects/hockey-wiz/frontend/src/pages/teams/Teams.js"],"names":["React","useQuery","gql","Teams","props","console","log","GET_TEAM","variables","match","params","name","data","loading","error"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAGA,QAAMG,QAAQ,GAAGL,GAAH,mBAAd;;AAJkB,oBAgBmBD,QAAQ,CAACM,QAAD,EAAW;AAACC,IAAAA,SAAS,EAACJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC;AAA9B,GAAX,CAhB3B;AAAA,QAgBNC,IAhBM,aAgBNA,IAhBM;AAAA,QAgBAC,OAhBA,aAgBAA,OAhBA;AAAA,QAgBSC,KAhBT,aAgBSA,KAhBT;;AAiBd,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACf,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEKV,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC,IAFxB,CADJ;AAMH;;AAED,eAAeR,KAAf","sourcesContent":["import React from 'react'\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nfunction Teams(props) {\n    console.log(props)\n   \n    \n    const GET_TEAM = gql`\n    query team($name: String){\n        team(name: $name){\n          name\n          city\n          teamRecord{\n            wins\n            losses\n          }\n        }\n      }\n        `\n        const { data, loading, error } = useQuery(GET_TEAM, {variables:props.match.params.name});\n        if (loading) return <div>Loading</div>\n        if (error) return <div>Error</div>\n    return (\n        <div>\n            TEAMS PAGE!\n            {props.match.params.name}\n        </div>\n    )\n}\n\nexport default Teams\n"]},"metadata":{},"sourceType":"module"}